generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  DIRECTOR
  STAFF
}

model Admin {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Associate {
  id           String @id @default(uuid())
  email        String @unique
  passwordHash String
  role         Role   @default(STAFF)

  todos Todo[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Visa {
  id          String   @id @default(uuid())
  title       String
  description String
  slug        String   @unique
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AboutUs {
  id          String   @id @default(uuid())
  imageUrl    String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model WhyChooseUs {
  id          String   @id @default(uuid())
  title       String   @unique
  description String
  link        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Country {
  id          String   @id @default(uuid())
  title       String
  description String
  slug        String   @unique
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  colleges College[]
}

model College {
  id          String   @id @default(uuid())
  name        String
  description String
  slug        String   @unique
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  countryId String
  country   Country @relation(fields: [countryId], references: [id], onDelete: Cascade)
}

model Faq {
  id        String   @id @default(uuid())
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SiteDetails {
  id        String   @id @default("site")
  phone     String?
  email     String?
  facebook  String?
  twitter   String?
  youtube   String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id        String   @id @default(uuid())
  imageUrl  String
  name      String   @unique
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        String   @id @default(uuid())
  name      String
  phone     String
  email     String
  visaType  String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Todo {
  id          String    @id @default(uuid())
  date        DateTime
  title       String
  status      Boolean   @default(false)
  associateId String
  associate   Associate @relation(fields: [associateId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
